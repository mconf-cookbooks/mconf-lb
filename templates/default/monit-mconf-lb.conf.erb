#!monit
set logfile /var/log/monit.log

check process <%= node['mconf-lb']['app_name'] %> with pidfile "<%= node['mconf-lb']['pidfile'] %>"
<% if @cycle_multiplier > 1 %>
    every <%= @cycle_multiplier %> cycles
<% end %>
<% if node['mconf-lb']['use_systemd'] %>
    start program = "/bin/systemctl start <%= node['mconf-lb']['app_name'] %>"
    stop program = "/bin/systemctl stop <%= node['mconf-lb']['app_name'] %>"
<% else %>
    start program = "/sbin/start <%= node['mconf-lb']['app_name'] %>"
    stop program = "/sbin/stop <%= node['mconf-lb']['app_name'] %>"
<% end %>

<% if node['mconf-lb']['monit']['ping'] %>
    if failed port <%= node['mconf-lb']['internal_port'] %> protocol HTTP
        request /ping
        with timeout 30 seconds
        then restart
    <% if @abort_on_restarts > 0 %>
    if <%= @abort_on_restarts %> restarts within <%= @cycle_multiplier * @abort_on_restarts %> cycles then timeout
    <% end %>

    # Not the best way to do it, but the simplest. Will do the actions below twice, since they
    # are duplicates from the ones above.
    if failed port <%= node['mconf-lb']['internal_port'] %> protocol HTTP
        request /ping
        with timeout 30 seconds
        then exec /bin/bash -c 'echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (monit) HTTP failed, might restart it soon" >> <%= node["mconf-lb"]["deploy_to"] %>/log/production.log'
    <% if @abort_on_restarts > 0 %>
    if <%= @abort_on_restarts %> restarts within <%= @cycle_multiplier * @abort_on_restarts %> cycles
        then exec /bin/bash -c 'echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (monit) Too many restarts, might timeout it soon" >> <%= node["mconf-lb"]["deploy_to"] %>/log/production.log'
    <% end %>
<% end %>
