# References:
# http://wellconsidered.be/post/10519707671/node-js-on-nginx
# http://stackoverflow.com/questions/5009324/node-js-nginx-and-now
# For security:
# https://gist.github.com/plentz/6737338
# https://github.com/ioerror/duraconf/blob/master/configs/nginx/nginx.conf

# don't send the nginx version number in error pages and Server header
server_tokens off;

# config to don't allow the browser to render the page inside an frame or iframe
# and avoid clickjacking
add_header X-Frame-Options SAMEORIGIN;

# when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
# to disable content-type sniffing on some browsers.
add_header X-Content-Type-Options nosniff;

# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
# It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
# this particular website if it was disabled by the user.
add_header X-XSS-Protection "1; mode=block";

proxy_cache_path /tmp/nginx_cache keys_zone=api:10m;
proxy_cache_key $host$request_uri;
proxy_cache_lock on;
# proxy_buffer_size 8k;

log_format timed_combined '$remote_addr - $remote_user [$time_local] '
  '"$request" $status $body_bytes_sent '
  '"$http_referer" "$http_user_agent" '
  '$request_time $upstream_response_time $pipe $upstream_cache_status';
access_log    /var/log/nginx/access.log timed_combined;

server {
  listen 80;
  server_name <%= @domain %>;

<% if @ssl %>
  <% if @ssl_http_api %>
    <% if @cache_api %>
  include "/etc/nginx/includes/mconf-lb-api-cache.conf";
    <% end %>
  location /bigbluebutton/api {
    include "/etc/nginx/includes/mconf-lb-node.conf";
  }
  <% end %>

  # all other routes are redirected to HTTPS
  location / {
    return 302 https://$server_name$request_uri;
  }

<% else %>
  root <%= @deploy_to %>/public;

  gzip on;
  gzip_disable "msie6";
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  <% if @cache_api %>
    include "/etc/nginx/includes/mconf-lb-api-cache.conf";
  <% end %>

  location / {
    include "/etc/nginx/includes/mconf-lb-node.conf";
  }
<% end %>

<% if @use_custom_log %>
  access_log /var/log/nginx/access.log;
  access_log /var/log/nginx/custom.log custom;
<% end %>
}

<% if @ssl %>
server {
  listen 443 ssl;
  ssl_certificate <%= @certificates[:certificate_file] %>;
  ssl_certificate_key <%= @certificates[:certificate_key_file] %>;

  # enable session resumption to improve https performance
  # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ssl_dhparam /etc/nginx/ssl/dhp-2048.pem;

  # enables server-side protection from BEAST attacks
  # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
  ssl_prefer_server_ciphers on;
  # disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  # ciphers chosen for forward secrecy and compatibility
  # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
  ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

  server_name <%= @domain %>;
  root <%= @deploy_to %>/public;

  gzip on;
  gzip_disable "msie6";
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  <% if @cache_api %>
  include "/etc/nginx/includes/mconf-lb-api-cache.conf";
  <% end %>

  location / {
    include "/etc/nginx/includes/mconf-lb-node.conf";
  }

  <% if @use_custom_log %>
  access_log /var/log/nginx/access.log;
  access_log /var/log/nginx/custom.log custom;
  <% end %>
}
<% end %>
